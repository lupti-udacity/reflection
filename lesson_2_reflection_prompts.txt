What happens when you initialize a repository? Why do you need to do it?
You want to create a .git file inyour directory to start keeeping track of the new files' version control

How is the staging area different from the working directory and the repository?
What value do you think it offers?
Staging area keeps the files that you issued a git add <file> command. It is the area signifies that files had been added to this area and waiting for next git commit command to be issued on these files as one commit package.
Files left in the working directory signify that these are still in the work-in-progress and not yet to be staged for the commit.

How can you use the staging area to make sure you have one commit per logical
change?
use git diff --staged to compare the diff between staging area and the repository. Once you satisfy with the changes you have made, you can then commit to the repository as one logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
When you have an experimental feature that you want to try out but the main branch still needs to be supported. To do this you create a new branch to track your experimental features and changes.

How do the diagrams help you visualize the branch structure?
It shows the parent path of the tip of each branch. You can also identify the unreachable commits from the graph.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
